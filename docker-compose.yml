services:
  postgres:
    image: postgres:16-alpine
    container_name: caravan-postgres
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - caravan-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 3s
      retries: 2
      start_period: 5s

  nginx:
    build:
      context: ./nginx
    container_name: caravan-nginx
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "8080:80"
      - "443:443"
    volumes:
      - ./logs/nginx:/var/log/nginx
      - ./data/certbot/www:/var/www/html
      - ./data/certbot/conf:/etc/letsencrypt
    networks:
      - caravan-network
    restart: unless-stopped

  backend:
    build: .
    container_name: caravan-backend
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - backend_logs:/usr/src/app/logs
      - /usr/src/app/node_modules
    networks:
      - caravan-network
    command: yarn run start:prod
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -v http://localhost:8000/api/v0/health || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 2
      start_period: 5s

volumes:
  postgres_data:
  backend_logs:

networks:
  caravan-network:
    driver: bridge