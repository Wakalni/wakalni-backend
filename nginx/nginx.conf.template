map $http_origin $cors_origin {
    default "";
    "~^http://vercel\.easyDine\.com$"        $http_origin;
}

server {
    listen 80;
    server_name localhost;
    limit_req zone=mylimit burst=3 nodelay;
    
    location / {
        add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        add_header 'Access-Control-Allow-Credentials' '$CORS_CREDENTIALS' always;
        add_header 'Access-Control-Expose-Headers' '$CORS_EXPOSED_HEADERS' always;
        
        if ($request_method = OPTIONS) {
            add_header 'Access-Control-Allow-Origin' "$http_origin" always;
            add_header 'Access-Control-Allow-Credentials' '$CORS_CREDENTIALS' always;
            add_header 'Access-Control-Expose-Headers' '$CORS_EXPOSED_HEADERS' always;
            
            add_header 'Access-Control-Allow-Methods' '$CORS_METHODS' always;
            add_header 'Access-Control-Allow-Headers' '$CORS_ALLOWED_HEADERS' always;
            add_header 'Access-Control-Max-Age' '$CORS_MAX_AGE' always;
            return 204;
        }
        
        return 307 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name localhost;

    ssl_certificate /etc/nginx/ssl/localhost.crt;
    ssl_certificate_key /etc/nginx/ssl/localhost.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin" always;

    limit_req zone=mylimit burst=3 nodelay;
    client_max_body_size 100M;
    
    location / {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        add_header 'Access-Control-Allow-Credentials' '$CORS_CREDENTIALS' always;
        add_header 'Access-Control-Expose-Headers' '$CORS_EXPOSED_HEADERS' always;
            
        if ($request_method = OPTIONS) {
            add_header 'Access-Control-Allow-Origin' "$http_origin" always;
            add_header 'Access-Control-Allow-Credentials' '$CORS_CREDENTIALS' always;
            add_header 'Access-Control-Expose-Headers' '$CORS_EXPOSED_HEADERS' always;
            
            add_header 'Access-Control-Allow-Methods' '$CORS_METHODS' always;
            add_header 'Access-Control-Allow-Headers' '$CORS_ALLOWED_HEADERS' always;
            add_header 'Access-Control-Max-Age' '$CORS_MAX_AGE' always;
            return 204;
        }
        
        proxy_pass http://caravan-backend;
    }
}